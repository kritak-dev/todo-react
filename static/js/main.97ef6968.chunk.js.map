{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","index.js"],"names":["Todo","props","name","completed","id","toggleTaskCompleted","deleteTask","editTask","useState","isEditing","setEditing","newName","setNewName","editingTemplate","className","onSubmit","e","preventDefault","htmlFor","type","value","onChange","target","onClick","viewTemplate","defaultChecked","Form","addTask","setName","autoComplete","FilterButton","isPressed","setFilter","aria-pressed","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTask","editedTaskList","taskList","filterList","tasksNoun","length","headingText","newTask","nanoid","role","aria-labelledby","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97ef6968.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function Todo(props) {\n    const { name, completed, id, toggleTaskCompleted, deleteTask, editTask } = props;\n    const [isEditing, setEditing] = useState(false);\n    const [newName, setNewName] = useState('');\n\n    function handleChange(e) {\n        setNewName(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        editTask(id, newName);\n        setNewName('');\n        setEditing(false);\n    }\n\n    const editingTemplate = (\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n            <label className=\"todo-label\" htmlFor={id}>\n                New name for {name}\n            </label>\n            <input id={id} className=\"todo-text\" type=\"text\" value={newName} onChange={handleChange} />\n            </div>\n            <div className=\"btn-group\">\n            <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\n                Cancel\n                <span className=\"visually-hidden\">renaming {name}</span>\n            </button>\n            <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n                Save\n                <span className=\"visually-hidden\">new name for {name}</span>\n            </button>\n            </div>\n        </form>\n    );\n\n    const viewTemplate = (\n        <div className=\"stack-small\">\n            <div className=\"c-cb\">\n                <input\n                id={id}\n                type=\"checkbox\"\n                defaultChecked={completed}\n                onChange={() => toggleTaskCompleted(id)}\n                />\n                <label className=\"todo-label\" htmlFor={id}>\n                {name}\n                </label>\n            </div>\n            <div className=\"btn-group\">\n                <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\n                Edit <span className=\"visually-hidden\">{name}</span>\n                </button>\n                <button\n                type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => deleteTask(id)}\n            >\n            Delete <span className=\"visually-hidden\">{name}</span>\n            </button>\n            </div>\n        </div>\n    );\n\n    return (\n        <li className='todo'>{ isEditing ? editingTemplate : viewTemplate }</li>\n    );\n}","import React, { useState } from 'react';\n\nfunction Form(props) {\n    const { addTask } = props;\n    const [name, setName] = useState('');\n\n    function handleChange(e) {\n        setName(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (name !== '') addTask(name);\n        setName('');\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n        <h2 className=\"label-wrapper\">\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n            What needs to be done?\n          </label>\n        </h2>\n        <input\n          type=\"text\"\n          id=\"new-todo-input\"\n          className=\"input input__lg\"\n          name=\"text\"\n          autoComplete=\"off\"\n          value={ name }\n          onChange={ handleChange }\n        />\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n          Add\n        </button>\n      </form>\n    );\n}\n\nexport default Form;","import React from 'react';\n\nfunction FilterButton(props) {\n    const { name, isPressed, setFilter } = props;\n    return(\n        <button type=\"button\" className=\"btn toggle-btn\" aria-pressed={isPressed} onClick={() => setFilter(name)} >\n          <span className=\"visually-hidden\">Show </span>\n          <span>{ name }</span>\n          <span className=\"visually-hidden\"> tasks</span>\n        </button>\n    );\n}\n\nexport default FilterButton;","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function addTask(name) {\n    const newTask = { id: `todo-${nanoid()}`, name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  } \n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTask = tasks.filter(task => id !== task.id);\n    setTasks(remainingTask);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    \n    setTasks(editedTaskList);\n  }\n\n  const taskList  = tasks.filter(FILTER_MAP[filter]).map(task => (\n    <Todo \n      id={ task.id }\n      name={ task.name }\n      completed={ task.completed }\n      key={ task.id }\n      toggleTaskCompleted={ toggleTaskCompleted }\n      deleteTask={ deleteTask }\n      editTask={ editTask }\n    /> \n  ));\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton \n      name={name} \n      key={name} \n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>Todo App</h1>\n      <Form addTask={ addTask } />\n      <div className=\"filters btn-group stack-exception\">\n        { filterList }\n      </div>\n      <h2 id=\"list-heading\">\n        { headingText }\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        { taskList }\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n\nReactDOM.render(<App tasks={ DATA } />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}